{"version":3,"sources":["components/MovieBox.js","components/SearchBox.js","components/DetailCard.js","components/LoadingIcon.js","App.js","reportWebVitals.js","index.js"],"names":["MovieBox","Title","Poster","ShowDetail","DetailRequest","ActivateModal","Meta","Card","poster","src","alt","width","height","style","margin","className","span","textAlign","textOverflow","bordered","cover","onClick","fetch","process","then","resp","json","response","catch","message","avatar","size","title","Search","Input","SearchBox","searchHandler","offset","placeholder","enterButton","allowClear","onSearch","value","DetailCard","Language","imdbRating","Runtime","Genre","Plot","Released","Director","coloring","tagColor","parseInt","marginTop","marginBottom","color","LoadingIcon","API_KEY","App","useState","data","setData","error","setError","loading","isLoading","query","setQuery","visibleModal","activateModal","detail","setShowDetail","total","setTotal","detailRequest","setDetailRequest","page","setPage","useEffect","Response","Error","totalResults","defaultCurrent","onChange","newPage","console","log","showSizeChanger","showTotal","gutter","type","justify","length","map","result","index","centered","footer","onCancel","visible","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61068daf.chunk.js","sourcesContent":["/**\r\n * Swetha Sankar\r\n * Functional component for each movie box. Uses react hooks and Ant design\r\n */\r\nimport {Card, Col, Avatar} from \"antd\";\r\nimport React from \"react\";\r\n\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst MovieBox = ({Title, Poster, ShowDetail, DetailRequest, ActivateModal}) => {\r\n    // https://github.com/ant-design/ant-design/blob/master/components/card/demo/meta.md\r\n    const {Meta} = Card;\r\n\r\n    const detailHandler = () => {\r\n        /* Handles API request if user clicks on a movie box */\r\n        ActivateModal(true);\r\n        DetailRequest(true);\r\n\r\n        // Use movie title to make API request\r\n        fetch(`http://www.omdbapi.com/?t=${Title}&apikey=${API_KEY}`)\r\n            .then(resp => resp)\r\n            .then(resp => resp.json())\r\n            .then(response => {\r\n                DetailRequest(false);\r\n                ShowDetail(response);\r\n            })\r\n            .catch(({message}) => {\r\n                DetailRequest(false);\r\n            })\r\n    };\r\n\r\n    const gridStyle = {\r\n        width: '85%',\r\n        textAlign: 'center',\r\n        textOverflow: 'ellipsis',\r\n    };\r\n\r\n    const poster = <img\r\n        // If the poster doesn't exist, use the placeholder image\r\n        src={Poster === 'N/A' ? 'http://www.jackflodesign.com/wp-content/plugins/woocommerce/assets/images/placeholder.png' : Poster}\r\n        alt={Title}\r\n        width={250}\r\n        height={250}\r\n    />;\r\n\r\n    return (\r\n        <Col style={{margin: '5px 0'}} className=\"gutter-row\" span={5}>\r\n            <div className=\"site-card-wrapper\" style={{margin: '5px'}}>\r\n                <Card\r\n                    style={gridStyle}\r\n                    bordered={false}\r\n                    cover={poster}\r\n                    onClick={() => detailHandler()}\r\n                >\r\n                    <Meta\r\n                        avatar={<Avatar size={9}/>}\r\n                        title={Title}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        </Col>\r\n    )\r\n};\r\nexport default MovieBox;","/**\r\n * Swetha Sankar\r\n * Functional component for search box. Uses Ant Design\r\n */\r\nimport {Col, Input, Row} from \"antd\";\r\nimport React from \"react\";\r\nconst { Search } = Input;\r\n\r\nconst SearchBox = ({searchHandler}) => {\r\n    return (\r\n        <Row>\r\n            <Col span={12} offset={6}>\r\n                <Search\r\n                    // https://github.com/ant-design/ant-design/blob/master/components/input/demo/search-input.md\r\n                    placeholder=\"Enter movie title\"\r\n                    enterButton =\"Search!\"\r\n                    size=\"large\"\r\n                    allowClear\r\n                    onSearch={value => searchHandler(value)}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default SearchBox;","/**\r\n * Swetha Sankar\r\n * Functional component for card that displays more details about each movie. When expanded, displays poster,\r\n * movie language, director(s), genre(s), release date, IMDb rating, plot and title.\r\n */\r\n\r\nimport {Col, Row, Tag} from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst DetailCard = ({Title, Poster, Language, imdbRating, Runtime, Genre, Plot, Released, Director}) => {\r\n\r\n    // Set colors of tags within the card according to the imdbRating value (red = bad, green = good, yellow = eh)\r\n    var coloring = 'error';\r\n    var tagColor = '#f50';\r\n    if (parseInt(imdbRating) >= 7.0) {\r\n        coloring = 'success';\r\n        tagColor = '#87d068'\r\n    } else if (parseInt(imdbRating) >= 5.0) {\r\n        coloring = 'warning'\r\n        tagColor = 'gold-inverse'\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={13}>\r\n                <Row>\r\n                    <Col span={25}>\r\n                        <div className=\"title is-3\">\r\n                            <div className=\"content is-centered\">\r\n                                {Title}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: '25px', marginBottom: '10px'}}>\r\n                    <Col>\r\n                        {/* Tag documentation:  https://ant.design/components/tag/*/}\r\n\r\n                        <Tag color={coloring}>  {\"IMDb Rating: \" + imdbRating}</Tag>\r\n                        <Tag color={tagColor}> {\"Release Date: \" + Released}</Tag>\r\n                        <Tag color={tagColor}>{\"Runtime: \" + Runtime} </Tag>\r\n                        <Tag color={tagColor}>{\"Genre(s): \" + Genre}</Tag>\r\n                        <Tag color={tagColor}> {\"Director(s): \" + Director}</Tag>\r\n                        <Tag color={tagColor}> {\"Language(s): \" + Language}</Tag>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"subtitle is-6\"> {Plot} </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col>\r\n                <div className=\"content is-centered\">\r\n                    <img\r\n                        // If the poster doesn't exist, use the placeholder image\r\n                        src={Poster === 'N/A' ? 'http://www.jackflodesign.com/wp-content/plugins/woocommerce/assets/images/placeholder.png' : Poster}\r\n                        alt={Title}\r\n                        width={250}\r\n                        height={250}\r\n                    />\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default DetailCard;","/**\r\n * Swetha Sankar\r\n * LoadingIcon functional component (from Ant design -- default loader)\r\n */\r\n\r\nimport {Spin} from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst LoadingIcon = () => (\r\n    <div style={{margin: '20px 0', textAlign: 'center'}}>\r\n        <Spin size='large' />\r\n    </div>\r\n)\r\nexport default LoadingIcon;","/**\n * Swetha Sankar\n * Movie Searcher\n * Main page for configuring layout of website. Calls other components\n */\n// React hooks\nimport React, {useEffect, useState} from 'react';\n// Use Ant Design, Bulma for layout and design purposes\nimport 'antd/dist/antd.css';\nimport {\n    Layout,\n    Alert,\n    Row,\n    Modal,\n    Button,\n    Pagination\n} from 'antd';\n\n//import { Card, CardActions, CardContent, makeStyles, Button, Typography } from '@material-ui/core';\nimport MovieBox from \"./components/MovieBox\"\nimport SearchBox from \"./components/SearchBox\"\nimport DetailCard from \"./components/DetailCard\"\nimport LoadingIcon from \"./components/LoadingIcon\"\n\n// API key stored in .env file\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, isLoading] = useState(false);\n    const [query, setQuery] = useState('');\n    const [visibleModal, activateModal] = useState(false);\n    const [detail, setShowDetail] = useState(false);\n    const [total, setTotal] = useState(0);\n    const [detailRequest, setDetailRequest] = useState(false);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n\n        isLoading(true);\n        setError(null);\n        setData(null);\n        setTotal(0);\n        setPage(1);\n\n        fetch(`http://www.omdbapi.com/?s=${query}&page=${page}&type=\"movie\"&apikey=${API_KEY}`)\n\n            .then(resp => resp)\n            .then(resp => resp.json())\n            .then(response => {\n                if (response.Response === 'False') {\n                    if (!(response.Error === \"Incorrect IMDb ID.\")) {\n                        // Unnecessary error message\n                        setError(response.Error);\n                        isLoading(false);\n                    }\n                } else {\n                    setTotal(response.totalResults);\n                    setData(response.Search);\n                }\n                isLoading(false);\n            })\n            .catch(({message}) => {\n                setError(message);\n                isLoading(false);\n            })\n\n    }, [query]);\n\n\n    const pageSwitcher = (newPage) => {\n       // Switches the page and makes a new request to the API w/ the page number\n        <Pagination current = {newPage} />\n        fetch(`http://www.omdbapi.com/?s=${query}&page=${newPage}&type=\"movie\"&apikey=${API_KEY}`)\n            .then(resp => resp)\n            .then(resp => resp.json())\n            .then(response => {\n                if (response.Response === 'False') {\n                    if (!(response.Error === \"Incorrect IMDb ID.\")) {\n                        // Unnecessary error message\n                        setError(response.Error);\n                        isLoading(false);\n                    }\n                } else {\n                    console.log(response.Search);\n                    setData(response.Search);\n                }\n                isLoading(false);\n            })\n            .catch(({message}) => {\n                setError(message);\n                isLoading(false);\n            })\n\n    };\n\n\n    return (\n        <div className=\"App\">\n            <Layout className=\"layout\">\n                <div className=\"title is-1 has-text-black-bis is-spaced has-background-link-light\">\n                    <div className=\"content has-text-centered\">\n                        <p>\n                            Movie Searcher\n                        </p>\n                    </div>\n                </div>\n                <div className=\"subtitle is-5 has-text-black-bis\">\n                    <div className=\"content has-text-centered\">\n                        <p>\n                            Find a movie you like, and click on the poster for more details!\n                        </p>\n                    </div>\n                </div>\n\n                {/*Search box and pagination element*/}\n                <SearchBox searchHandler={setQuery}/>\n                <br/>\n                <section className=\"content has-text-centered\">\n                    <Pagination\n                        // https://github.com/ant-design/ant-design/tree/master/components/pagination/demo\n                        defaultCurrent = {1}\n                        onChange={pageSwitcher}\n                        showSizeChanger={false}\n                        total={total} //total number of card data available\n                        showTotal={totalResults => `${totalResults} items total`}\n                    />\n                </section>\n\n                <Row gutter={25} type=\"flex\" justify=\"center\">\n                    {error !== null &&\n                    <div style={{margin: '20px 0'}}>\n                        <Alert message={error} type=\"error\"/>\n                    </div>\n                    }\n                    {loading === true &&\n                    <LoadingIcon/>\n                    }\n                    {/* Layout for movie results\n                    https://medium.com/wesionary-team/how-to-implement-ant-design-with-react-7d21b6e261cc\n                    */}\n                    {data !== null && data.length > 0 && data.map((result, index) => (\n                        <MovieBox\n                            key={index}\n                            {...result}\n                            ShowDetail={setShowDetail}\n                            DetailRequest={setDetailRequest}\n                            ActivateModal={activateModal}\n                        />\n                    ))}\n\n\n                </Row>\n                {/* Modal (Detail Card) that appears when you click on a poster */}\n                <Modal\n                    centered\n                    footer={[\n                        <Button key=\"back\" onClick={() => activateModal(false)}>\n                            Return\n                        </Button>\n                    ]}\n                    onCancel={() => activateModal(false)}\n                    width={600}\n                    visible={visibleModal}\n                >\n                    {detailRequest === false ?\n                        (<DetailCard {...detail} />) :\n                        (<LoadingIcon/>)\n                    }\n                </Modal>\n\n                {/* Short footer w/ project info */}\n                <div className=\"footer\">\n                    <div className=\"content has-text-centered\">\n                        <strong>Movie Searcher </strong> by Swetha Sankar (<a\n                        href=\"https://github.com/swetha-sankar/movie_master\">GitHub</a>) 2021\n                    </div>\n                </div>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}